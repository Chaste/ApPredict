name: Ubuntu 20.04 ApPredict test suite

on:
  push:
    branches:
      - main
      
  schedule:
    - cron:  '0 0 * * *'
    
  workflow_dispatch:  
    inputs:
      chaste_clone_params:
        description: "Chaste clone parameters"
        default: "--branch develop"
        type: "string"
  
jobs:

  build-and-test:

    name: Build and test on Ubuntu 20.04
    runs-on: [self-hosted, ubuntu-focal]
    env:
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir
      CC: gcc
      CXX: g++
      
    steps:
    - name: set number of processors
      run: |
        echo "NPROC=$(( $(nproc) < 12 ? $(nproc) : 12 ))" >> $GITHUB_ENV
        
    - name: checkout Chaste repository
      run: |
            rm Chaste -rf
            git clone https://github.com/Chaste/Chaste.git ${{ inputs.chaste_clone_params }}
      
    - name: checkout ApPredict project
      uses: actions/checkout@v3
      with:
        repository: Chaste/ApPredict
        path: Chaste/projects/ApPredict
        submodules: recursive
        
    - name: ${CXX} version
      run: |
        ${CXX} --version
        ${CXX} --version > compiler.version
        
    - name: make build and test directories
      run: |
        mkdir -p Chaste/build
        mkdir -p ${CHASTE_TEST_OUTPUT}
        
    - name: cmake configure
      run: nice -n 10 cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: Chaste/build
      
    - name: remove cellml
      run: rm -rf ApPredict/src/cellml
      working-directory: Chaste/projects
      
    - name: cmake configure again
      run: nice -n 10 cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: Chaste/build

    - name: build core libraries
      run: nice -n 10 cmake --build . --parallel ${NPROC} --target chaste_core
      working-directory: Chaste/build

    - name: build heart
      run: nice -n 10 cmake --build . --parallel ${NPROC} --target chaste_heart
      working-directory: Chaste/build
      
    - name: build ApPredict
      run: nice -n 10 cmake --build . --parallel ${NPROC} --target project_ApPredict
      working-directory: Chaste/build

    - name: run ApPredict test pack
      run: nice -n 10 ctest -j${NPROC} -L ApPredict --output-on-failure
      working-directory: Chaste/build
  
    - name: send notifications
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ap-predict
        status: FAILED
        color: danger
